package com.fdp.aop;

import com.jfinal.aop.Aop;
import com.jfinal.aop.Interceptor;
import com.jfinal.aop.Invocation;
import com.sloth.common.AjaxData;
import com.sloth.model.TmpUser;
import com.sloth.model.User;
import com.sloth.service.TmpUserService;
import com.sloth.service.UserService;
import com.sloth.util.StringKit;

public class AuthInterceptor implements Interceptor {
	@Override
	public void intercept(Invocation inv) {
		String token = inv.getController().getHeader("token");
		if (StringKit.isEmpty(token)) {
			AjaxData ajaxData = new AjaxData();
			ajaxData.setCode(20001);
			inv.getController().renderJson(ajaxData);
			return;
		}
		User user = service.findByToken(token);
		TmpUser tmpUser = Aop.get(TmpUserService.class).findByToken(token);
		if (user == null && tmpUser == null) {
			AjaxData ajaxData = new AjaxData();
			ajaxData.setCode(20001);
			inv.getController().renderJson(ajaxData);
		} else {
			if (user != null) {
				if (user.getStatus() == 0) {// 用户被禁用
					AjaxData ajaxData = new AjaxData();
					ajaxData.setCode(20004);
					inv.getController().renderJson(ajaxData);
				} else {
					inv.getController().setAttr("tmpUser", tmpUser);
					inv.getController().setAttr("user", user);
					inv.invoke();
				}
			} else {
				inv.getController().setAttr("tmpUser", tmpUser);
				inv.invoke();
			}
		}
	}

	private UserService service = Aop.get(UserService.class);
}